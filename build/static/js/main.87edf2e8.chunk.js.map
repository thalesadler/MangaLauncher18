{"version":3,"sources":["assets/Logo.jsx","components/CadastroManga/CadastroManga.jsx","components/CadastroManga/index.js","components/GridManga/GridManga.jsx","components/GridManga/index.js","components/EstadoManga/EstadoManga.jsx","components/EstadoManga/index.js","components/CapitulosManga/CapitulosManga.jsx","components/CapitulosManga/index.js","components/EditEstado/EditEstado.jsx","components/EditEstado/index.js","components/EditManga/EditManga.jsx","components/EditManga/index.js","dados/Manga.js","dados/ListaMangas.js","components/MangaLauncher.jsx","components/Login.jsx","dados/User.js","dados/LoginService.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","props","version","xmlns","width","height","viewBox","preserveAspectRatio","transform","fill","stroke","d","CadastroManga","listamangas","useState","nome","setNome","mangas","TextField","id","label","variant","style","size","value","onChange","event","target","Button","color","startIcon","onClick","addManga","deleteManga","columns","field","headerName","type","GridManga","rows","setRows","setMangas","useEffect","atualizaRows","dados","rowstemp","forEach","manga","Id","Nome","atual","CapituloAtual","inscrever","desinscrever","rowHeight","hideFooter","onRowSelected","selManga","data","EstadoManga","selEstado","FormControl","component","RadioGroup","aria-label","name","defaultValue","row","FormControlLabel","control","Radio","fontSize","CapitulosManga","setAtual","atualizaAtual","mangaSelecionado","onBlur","atualizaCap","InputLabelProps","shrink","InputProps","inputProps","min","proximoCap","float","EditEstado","estado","setEstado","atualizaEstado","estadoSelecionado","Select","MenuItem","EditManga","atualizaNome","FormLabel","Manga","this","Estado","ListaMangas","_inscritos","idseq","apiUrl","token","localStorage","getItem","func","includes","filter","f","postManga","number","slice","capAtual","parseInt","window","open","padToTwo","a","putManga","index","indexOf","splice","notificar","sels","m","getManga","requestOptions","method","headers","fetch","response","json","Dados","body","JSON","stringify","status","push","console","log","erro","MangaLauncher","bind","Login","service","username","setUserName","password","setPassword","invalidLogin","setInvalidLogin","atualizaLogin","loginInicial","marginTop","align","login","User","LoginService","logado","user","postLogin","setItem","access_token","App","loginService","setLogado","atualizaLogado","Container","maxWidth","Typography","SvgIcon","MangaIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87edf2e8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Logo = props =>\r\n<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\nwidth=\"35.000000pt\" height=\"40.000000pt\" viewBox=\"0 0 176.000000 230.000000\"\r\npreserveAspectRatio=\"xMidYMid meet\">\r\n\r\n<g transform=\"translate(0.000000,256.000000) scale(0.100000,-0.100000)\"\r\nfill=\"#000000\" stroke=\"none\">\r\n<path d=\"M1089 2385 c-12 -11 -177 -37 -244 -39 -79 -1 -80 -1 -77 -26 2 -14\r\n7 -79 10 -145 4 -66 11 -126 15 -132 11 -17 42 -16 56 1 7 8 44 22 84 31 86\r\n21 107 31 107 50 0 19 -30 19 -100 0 -78 -21 -82 -20 -78 18 3 31 4 32 87 52\r\n47 12 86 26 89 33 7 23 -48 25 -108 2 -32 -12 -64 -19 -69 -15 -6 3 -11 20\r\n-11 36 0 24 6 33 33 43 44 19 187 50 194 43 3 -4 1 -64 -5 -134 -6 -70 -10\r\n-139 -9 -153 2 -23 -2 -25 -63 -32 -36 -4 -98 -15 -139 -24 l-74 -16 -24 31\r\nc-43 55 -48 43 -48 -106 0 -144 6 -162 42 -124 33 36 316 70 381 47 20 -7 32\r\n1 92 61 40 39 70 78 70 89 0 11 -15 35 -34 53 -32 31 -36 32 -72 22 -22 -6\r\n-45 -11 -51 -11 -18 0 -16 43 7 155 23 113 25 149 7 163 -15 13 -64 32 -68 27z\r\nm101 -410 c0 -8 -7 -33 -16 -55 -13 -32 -22 -41 -49 -46 -51 -9 -70 -2 -73 29\r\n-5 42 45 87 97 87 30 0 41 -4 41 -15z m-190 -29 c0 -46 -18 -76 -45 -76 -23 0\r\n-25 4 -25 43 0 51 4 57 42 57 23 0 28 -4 28 -24z m-130 -35 c0 -30 -6 -44 -22\r\n-55 -45 -32 -68 -16 -68 44 0 33 21 49 63 50 25 0 27 -3 27 -39z\"/>\r\n<path d=\"M450 2261 c0 -5 21 -28 47 -51 59 -51 96 -53 101 -3 4 43 -26 63 -95\r\n63 -29 0 -53 -4 -53 -9z\"/>\r\n<path d=\"M398 2023 c-10 -2 -18 -8 -18 -13 0 -12 109 -70 131 -70 53 0 67 40\r\n21 64 -31 16 -108 27 -134 19z\"/>\r\n<path d=\"M520 1813 c-72 -131 -112 -185 -155 -209 -19 -11 -19 -12 8 -52 34\r\n-52 73 -80 89 -64 6 6 22 48 35 92 12 44 43 136 68 204 43 119 54 166 38 166\r\n-5 0 -42 -62 -83 -137z\"/>\r\n<path d=\"M885 1756 c-55 -12 -106 -25 -112 -29 -20 -12 -15 -26 11 -38 20 -9\r\n42 -6 115 16 50 16 94 25 98 21 11 -10 -36 -98 -50 -93 -72 27 -128 40 -138\r\n30 -8 -8 2 -17 40 -34 29 -12 50 -25 49 -29 -5 -14 -111 -95 -207 -159 -61\r\n-42 -90 -66 -83 -73 16 -16 203 69 282 129 38 29 74 53 79 53 5 0 63 -45 128\r\n-100 65 -55 129 -103 142 -107 14 -3 48 -1 75 5 28 7 81 17 119 24 37 6 67 15\r\n67 19 0 10 -45 23 -150 44 -95 19 -313 118 -318 145 -1 9 16 40 38 70 72 97\r\n65 131 -29 129 -31 -1 -101 -11 -156 -23z\"/>\r\n<path d=\"M787 1333 c-11 -10 -8 -196 3 -213 22 -35 49 42 50 141 0 53 -11 79\r\n-35 79 -7 0 -15 -3 -18 -7z\"/>\r\n<path d=\"M830 1070 c-79 -17 -169 -29 -217 -29 -86 -1 -99 -9 -61 -36 20 -13\r\n56 -14 278 -9 142 4 261 11 268 17 38 30 -25 88 -94 86 -22 -1 -100 -14 -174\r\n-29z\"/>\r\n<path d=\"M900 890 c-25 -5 -94 -16 -153 -25 -103 -17 -108 -17 -128 0 -25 24\r\n-46 8 -30 -23 6 -11 11 -67 11 -124 1 -110 14 -245 24 -256 4 -3 15 -1 25 5\r\n12 7 88 13 205 14 103 2 190 7 193 12 10 16 93 331 93 352 0 41 -29 55 -116\r\n54 -43 -1 -99 -5 -124 -9z m130 -85 c0 -54 -38 -235 -53 -253 -6 -8 -27 -12\r\n-56 -10 l-46 3 -3 47 c-4 64 9 83 63 97 35 9 46 16 43 29 -2 13 -15 18 -52 20\r\nl-48 3 5 36 c9 56 31 73 94 73 l53 0 0 -45z m-242 -41 c3 -41 3 -41 -42 -53\r\n-72 -18 -76 -16 -76 32 0 56 14 69 70 65 l45 -3 3 -41z m4 -155 c-4 -80 -5\r\n-80 -64 -77 l-53 3 -3 49 c-2 27 1 53 6 58 9 9 91 27 107 23 6 -1 9 -26 7 -56z\"/>\r\n<path d=\"M384 835 c-4 -8 1 -33 10 -55 13 -33 16 -82 16 -263 0 -204 2 -224\r\n20 -247 16 -20 22 -23 37 -14 13 8 20 29 24 80 9 92 10 433 3 462 -11 41 -98\r\n70 -110 37z\"/>\r\n<path d=\"M1275 800 c-3 -6 -10 -51 -16 -102 -9 -93 -15 -121 -50 -242 l-20\r\n-68 -37 5 c-50 7 -591 -24 -621 -35 -19 -7 -21 -11 -11 -23 11 -13 61 -15 324\r\n-15 171 0 316 -4 323 -8 6 -4 16 -20 22 -35 6 -15 15 -27 21 -27 33 0 103 191\r\n147 405 l17 85 -34 35 c-34 36 -54 43 -65 25z\"/>\r\n</g>\r\n</svg>\r\n\r\nexport default Logo;","import React, {useState, useEffect} from 'react';\r\nimport { TextField, Button, Icon } from '@material-ui/core/';\r\nimport AddIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveIcon from '@material-ui/icons/RemoveCircle';\r\n\r\nfunction CadastroManga({listamangas}) {\r\n    const [nome,setNome] = useState(\"\");\r\n    const [mangas,setMangas] = useState(listamangas);\r\n\r\n    return (\r\n        <form>\r\n            <TextField\r\n                id=\"manga\"\r\n                label=\"Manga\"\r\n                variant=\"outlined\"\r\n                style={{ width: \"70%\" }}\r\n                size=\"small\"\r\n                value={nome}\r\n                onChange={event => {\r\n                    setNome(event.target.value);\r\n                }} \r\n                />\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"medium\"\r\n                startIcon={<AddIcon />}\r\n                onClick={event => {\r\n                    mangas.addManga(nome);\r\n                }}\r\n            >\r\n                Adicionar\r\n                </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                size=\"medium\"\r\n                onClick={event => {\r\n                    mangas.deleteManga();\r\n                }}\r\n                startIcon={<RemoveIcon />}\r\n            >\r\n                Remover\r\n                </Button>\r\n\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default CadastroManga;","import CadastroManga from './CadastroManga';\r\nexport default CadastroManga;","import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Menu, MenuItem } from '@material-ui/core';\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'nome', headerName: 'Nome', width: 635 },\r\n    {\r\n        field: 'atual',\r\n        headerName: 'Atual',\r\n        type: 'number',\r\n        width: 150,\r\n    }\r\n];\r\n\r\nfunction GridManga({ listamangas }) {\r\n    const [rows, setRows] = useState([]);\r\n    const [mangas, setMangas] = useState(listamangas);\r\n\r\n    useEffect(() => {\r\n        function atualizaRows(dados) {\r\n            setMangas(dados);\r\n            let rowstemp = [];\r\n            dados.mangas.forEach(manga => {\r\n                rowstemp = [...rowstemp, { id: manga.Id, nome: manga.Nome, atual: manga.CapituloAtual }]\r\n            });\r\n            setRows(rowstemp);\r\n        }\r\n\r\n        mangas.inscrever(atualizaRows);\r\n        return () => {\r\n            mangas.desinscrever(atualizaRows);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ height: 375, width: '100%' }}>\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                rowHeight=\"40\"\r\n                hideFooter\r\n                onRowSelected={event => {\r\n                    mangas.selManga(event.data.id);\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GridManga;","import GridManga from \"./GridManga\";\r\nexport default GridManga;","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { RadioGroup, Radio, FormControl, FormLabel, FormControlLabel } from \"@material-ui/core\"\r\n\r\nconst style = {\r\n        height:40\r\n  }\r\n\r\nconst styleradio = {\r\n    height:10\r\n}\r\n\r\nfunction EstadoManga({selEstado}) {\r\n    return (      \r\n        <section>\r\n            <FormControl component=\"fieldset\" variant=\"outlined\">\r\n                <RadioGroup style={style} \r\n                            aria-label=\"Estado\" \r\n                            name=\"estado\" \r\n                            defaultValue=\"Ativo\"\r\n                            row\r\n                            onChange={event =>{\r\n                                selEstado(event.target.value);\r\n                            }\r\n                            }>\r\n                    <FormControlLabel value=\"Ativo\" control={<Radio />} label={<span style={{ fontSize: '15px' }}>Em Execução</span>} />\r\n                    <FormControlLabel value=\"Semanal\" control={<Radio />} label={<span style={{ fontSize: '15px' }}>Semanal</span>} />\r\n                    <FormControlLabel value=\"Pausado\" control={<Radio />} label={<span style={{ fontSize: '15px' }}>Pausado</span>} />\r\n                    <FormControlLabel value=\"Terminado\" control={<Radio />} label={<span style={{ fontSize: '15px' }}>Terminado</span>}/>\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default EstadoManga;","import EstadoManga from \"./EstadoManga\";\r\nexport default EstadoManga;","import React, {useState, useEffect} from 'react';\r\nimport { TextField, Button } from \"@material-ui/core\"\r\nimport OpenIcon from '@material-ui/icons/OpenInNew';\r\n\r\nconst style = {\r\n    height:10\r\n}\r\n\r\nfunction CapitulosManga({listamangas}) {\r\n    const [atual, setAtual] = useState(0);\r\n    const [mangas, setMangas] = useState(listamangas);\r\n\r\n    useEffect(() => {\r\n        function atualizaAtual(dados) {\r\n            setMangas(dados);\r\n            setAtual(dados.mangaSelecionado.CapituloAtual);\r\n        }\r\n\r\n        mangas.inscrever(atualizaAtual);\r\n        return () => {\r\n            mangas.desinscrever(atualizaAtual);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <TextField\r\n                id=\"outlined-number\"\r\n                label=\"Capítulo Atual\"\r\n                type=\"number\"\r\n                size=\"small\"\r\n                value={atual}\r\n                onChange={event => {\r\n                    setAtual(event.target.value)\r\n                }}\r\n                onBlur={event => {\r\n                    mangas.atualizaCap(event.target.value)\r\n                }}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                InputProps={{\r\n                    inputProps: { \r\n                        min: 0 \r\n                    }\r\n                }}\r\n                variant=\"outlined\"\r\n            />\r\n            <Button\r\n                   variant=\"contained\"\r\n                   size=\"medium\"\r\n                   startIcon={<OpenIcon />}\r\n                   onClick={event => {                       \r\n                       mangas.proximoCap();\r\n                   }\r\n                   }>\r\n                Abrir Próximo\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CapitulosManga;","import CapitulosManga from \"./CapitulosManga\";\r\nexport default CapitulosManga;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Select, MenuItem, InputLabel} from \"@material-ui/core\";\r\nimport AlterIcon from '@material-ui/icons/Loop';\r\n\r\nconst style = {\r\n    float: \"right\",\r\n    height: 40\r\n  };\r\n\r\nfunction EditEstado({listamangas}){\r\n    const [estado, setEstado] = useState(\"Ativo\");\r\n    const [mangas, setMangas] = useState(listamangas);\r\n\r\n    useEffect(() => {\r\n        function atualizaEstado(dados) {\r\n            setMangas(dados);\r\n            setEstado(dados.estadoSelecionado);\r\n        }\r\n\r\n        mangas.inscrever(atualizaEstado);\r\n        return () => {\r\n            mangas.desinscrever(atualizaEstado);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Button style={style}\r\n                variant=\"contained\"\r\n                size=\"medium\"\r\n                startIcon={<AlterIcon />}\r\n                onClick={event => {\r\n                    mangas.atualizaEstado(estado);\r\n                }}\r\n            >\r\n                Alterar Estado\r\n                </Button>\r\n        <Select style={style}\r\n          value={estado}\r\n          onChange={event => { \r\n              setEstado(event.target.value)\r\n          }}\r\n          variant=\"outlined\"\r\n        >\r\n          <MenuItem value={\"Ativo\"}>Ativo</MenuItem>\r\n          <MenuItem value={\"Semanal\"}>Semanal</MenuItem>\r\n          <MenuItem value={\"Pausado\"}>Pausado</MenuItem>\r\n          <MenuItem value={\"Terminado\"}>Terminado</MenuItem>\r\n        </Select>\r\n        \r\n      </>\r\n    )\r\n}\r\n\r\nexport default EditEstado;","import EditEstado from \"./EditEstado\";\r\nexport default EditEstado;","import React, { useState, useEffect } from 'react';\r\nimport CapitulosManga from '../CapitulosManga';\r\nimport EditEstado from '../EditEstado';\r\nimport {FormControl, FormLabel, Box} from '@material-ui/core';\r\nimport \"./EditManga.css\"\r\n\r\nfunction EditManga({ listamangas }) {\r\n    const [nome, setNome] = useState(\"\");\r\n    const [mangas, setMangas] = useState(listamangas);\r\n\r\n    useEffect(() => {\r\n        function atualizaNome(dados) {\r\n            setMangas(dados);\r\n            setNome(dados.mangaSelecionado.nome);\r\n        }\r\n\r\n        mangas.inscrever(atualizaNome);\r\n        return () => {\r\n            mangas.desinscrever(atualizaNome);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n                <FormLabel>{nome}</FormLabel>\r\n                <p/>\r\n                <CapitulosManga listamangas={mangas}/>\r\n                <EditEstado listamangas={mangas}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditManga;","import EditManga from \"./EditManga\";\r\nexport default EditManga;","export default class Manga{\r\n    constructor(nome, estado)\r\n    {\r\n        this.Id = 0;\r\n        this.Nome = nome;\r\n        this.CapituloAtual = 0;\r\n        this.Estado = estado\r\n    }\r\n}","import Manga from \"./Manga\";\r\n\r\nexport default class ListaMangas {\r\n    constructor() {\r\n        this.mangas = [];\r\n        this.mangaSelecionado = new Manga();\r\n        this.estadoSelecionado = \"Ativo\";\r\n        this._inscritos = [];\r\n        this.idseq = 0;\r\n        this.apiUrl = 'https://thalesmangaapi.azurewebsites.net//api/manga';\r\n        //this.apiUrl = 'https:/localhost:5001/api/manga';\r\n        this.token = localStorage.getItem('@mangalauncher/token');\r\n    }\r\n\r\n    inscrever(func) {\r\n        if (!this._inscritos.includes(func)) {\r\n            this._inscritos = [...this._inscritos, func];\r\n        }\r\n    }\r\n\r\n    desinscrever(func) {\r\n        this._inscritos = this._inscritos.filter(f => f !== func)\r\n    }\r\n\r\n    notificar() {\r\n        this._inscritos.forEach(func => func(this));\r\n    }\r\n\r\n    addManga(nome) {\r\n        if (nome != \"\") {\r\n            const manga = new Manga(nome, this.estadoSelecionado);\r\n            this.postManga(manga);\r\n        }\r\n    }\r\n\r\n    padToTwo(number) {\r\n        if (number<=9) { number = (\"0\"+number).slice(-2); }\r\n        return number;\r\n    }\r\n\r\n    proximoCap() {\r\n        if (this.mangaSelecionado.Nome != \"\") {\r\n            const capAtual = parseInt(this.mangaSelecionado.CapituloAtual,10) + 1;\r\n            window.open('http://unionleitor.top/leitor/' + this.mangaSelecionado.Nome + '/' + this.padToTwo(capAtual),'_blank');\r\n            this.atualizaCap(capAtual);\r\n        }\r\n    }\r\n\r\n    async atualizaEstado(Estado) {\r\n        if (this.mangaSelecionado.Nome != \"\") {\r\n            this.mangaSelecionado.Estado = Estado;\r\n            await this.putManga(this.mangaSelecionado)\r\n            const index = this.mangas.indexOf(this.mangaSelecionado);\r\n            this.mangas.splice(index, 1);\r\n            this.notificar();\r\n        }\r\n    }\r\n\r\n    async atualizaCap(capAtual) {\r\n        if (this.mangaSelecionado.Nome != \"\") {\r\n            this.mangaSelecionado.CapituloAtual = capAtual;\r\n            await this.putManga(this.mangaSelecionado)\r\n            const index = this.mangas.indexOf(this.mangaSelecionado);\r\n            this.mangas.splice(index, 1, this.mangaSelecionado);\r\n            this.notificar();\r\n        }\r\n    }\r\n\r\n    selManga(id) {\r\n        const sels = this.mangas.filter(m => m.Id == id);\r\n        this.mangaSelecionado = sels[0];\r\n        this.notificar();\r\n    }\r\n\r\n    selEstado(estado) {\r\n        this.estadoSelecionado = estado;\r\n        this.getManga();\r\n    }\r\n\r\n    async getManga() {\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json',\r\n                       'Authorization': 'Bearer ' + this.token }\r\n        };\r\n        const response = await fetch(this.apiUrl + '/' + this.estadoSelecionado, requestOptions);\r\n        const json = await response.json();\r\n\r\n        this.mangas = [];\r\n        json.Dados.forEach(manga => {\r\n            this.mangas = [...this.mangas, manga]\r\n        });\r\n\r\n        this.notificar();\r\n    }\r\n\r\n    async postManga(manga) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json',\r\n                       'Authorization': 'Bearer ' + this.token },\r\n            body: JSON.stringify(manga)\r\n        };\r\n        const response = await fetch(this.apiUrl, requestOptions);\r\n        const json = await response.json();\r\n\r\n        if (response.status == 200) {\r\n            this.mangas.push(json.Dados);\r\n            this.notificar();\r\n        } else {\r\n            console.log(json.erro)\r\n        }\r\n\r\n    }\r\n\r\n    async putManga(manga) {\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json',\r\n                       'Authorization': 'Bearer ' + this.token },\r\n            body: JSON.stringify(manga)\r\n        };\r\n        const response = await fetch(this.apiUrl, requestOptions);\r\n        const json = await response.json();\r\n    }\r\n\r\n    async deleteManga() {\r\n        await fetch((this.apiUrl), {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json',\r\n                       'Authorization': 'Bearer ' + this.token },\r\n            body: JSON.stringify(this.mangaSelecionado)\r\n        });\r\n\r\n        const index = this.mangas.indexOf(this.mangaSelecionado);\r\n        this.mangas.splice(index, 1);\r\n        this.notificar(index);\r\n    }\r\n}","import React, {Fragment} from 'react';\r\nimport CadastroManga from './CadastroManga'\r\nimport GridManga from './GridManga'\r\nimport EstadoManga from './EstadoManga'\r\nimport EditManga from './EditManga'\r\nimport ListaMangas from \"../dados/ListaMangas\"\r\n\r\nfunction MangaLauncher(){\r\n    const mangas = new ListaMangas();\r\n    mangas.getManga();\r\n\r\n    return(\r\n        <Fragment>\r\n            <CadastroManga listamangas={mangas}/>\r\n            <p/>\r\n            <EstadoManga selEstado={mangas.selEstado.bind(mangas)}/>\r\n            <GridManga listamangas={mangas}/>\r\n            <p/>\r\n            <EditManga listamangas={mangas}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default MangaLauncher;","import React, { Fragment } from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { TextField, Button, Icon } from '@material-ui/core/';\r\n\r\nfunction Login({service}) {\r\n    const [username, setUserName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [invalidLogin,setInvalidLogin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        function atualizaLogin(dados) {\r\n            setInvalidLogin(dados.invalidLogin);\r\n        }\r\n\r\n        service.inscrever(atualizaLogin);\r\n        service.loginInicial();\r\n        return () => {\r\n            service.desinscrever(atualizaLogin);\r\n        };\r\n    }, []);\r\n\r\n    const styles = {\r\n        marginTop: 75,\r\n      };\r\n\r\n    return (\r\n        <Fragment>\r\n            <form style={styles} align=\"center\">\r\n                <TextField\r\n                    id=\"username\"\r\n                    label=\"Usuário\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"25%\" }}\r\n                    size=\"small\"\r\n                    value={username}\r\n                    onChange={event => {\r\n                        setUserName(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <p />\r\n\r\n                <TextField\r\n                    id=\"password\"\r\n                    label=\"Senha\"\r\n                    variant=\"outlined\"\r\n                    style={{ width: \"25%\" }}\r\n                    size=\"small\"\r\n                    type=\"password\"\r\n                    value={password}\r\n                    onChange={event => {\r\n                        setPassword(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <p />\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    onClick={event => {\r\n                        service.login(username, password);\r\n                    }}\r\n                >\r\n                    Login\r\n                </Button>\r\n\r\n                <p/>\r\n\r\n                {invalidLogin &&\r\n                <font color=\"red\">Login inválido!!</font>}\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;","export default class User{\r\n    constructor(username, password)\r\n    {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}","import User from \"./User\";\r\n\r\nexport default class LoginService {\r\n    constructor() {\r\n        this._inscritos = [];\r\n        this.apiUrl = 'https://thalesuserapi.azurewebsites.net//api/login';\r\n        //this.apiUrl = 'https:/localhost:5001/api/login';\r\n        this.logado = false;\r\n        this.invalidLogin = false;\r\n    }\r\n\r\n    inscrever(func) {\r\n        if (!this._inscritos.includes(func)) {\r\n            this._inscritos = [...this._inscritos, func];\r\n        }\r\n    }\r\n\r\n    desinscrever(func) {\r\n        this._inscritos = this._inscritos.filter(f => f !== func)\r\n    }\r\n\r\n    notificar() {\r\n        this._inscritos.forEach(func => func(this));\r\n    }\r\n\r\n    loginInicial() {\r\n        const username = localStorage.getItem('@mangalauncher/user');\r\n        const password = localStorage.getItem('@mangalauncher/password');        \r\n        this.login(username, password);\r\n    }\r\n\r\n    login(username, password) {\r\n        if (username && password) {\r\n            const user = new User(username, password);\r\n            this.postLogin(user);\r\n        }\r\n    }\r\n\r\n    async postLogin(user) {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(user)\r\n        };\r\n        const response = await fetch(this.apiUrl, requestOptions);\r\n        const json = await response.json();\r\n\r\n        if (response.status == 200) {\r\n            this.logado = true;\r\n            this.invalidLogin = false;\r\n            localStorage.setItem('@mangalauncher/user', user.username);\r\n            localStorage.setItem('@mangalauncher/password', user.password);\r\n            localStorage.setItem('@mangalauncher/token', json.access_token);\r\n            this.notificar();\r\n        } else {\r\n            this.logado = false;\r\n            this.invalidLogin = true;\r\n            this.notificar();\r\n        }\r\n    }\r\n}","import './App.css';\nimport {Container, Typography, SvgIcon} from '@material-ui/core/';\nimport 'fontsource-roboto';\nimport MangaIcon from './assets/Logo';\nimport MangaLauncher from \"./components/MangaLauncher\";\nimport Login from \"./components/Login\";\nimport LoginService from './dados/LoginService';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const loginService = new LoginService();\n  const [logado,setLogado] = useState(false);\n\n  useEffect(() => {\n    function atualizaLogado(dados) {\n        setLogado(dados.logado);\n    }\n\n    loginService.inscrever(atualizaLogado);\n    return () => {\n      loginService.desinscrever(atualizaLogado);\n    };\n  }, []);\n\n  return (\n    <Container component=\"article\" maxWidth=\"md\">\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\">\n          MangaLauncher\n          <SvgIcon component={MangaIcon}/>\n      </Typography>\n      <p/>\n      {logado\n      ? <MangaLauncher/> \n      : <Login service={loginService}/>\n      }\n           \n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}